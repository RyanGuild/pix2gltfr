{"mappings":"MAAAA,EAAiB,CACfC,QAAW,CACTC,KAAQ,YACRC,QAAW,QACXC,QAAW,OACXC,aAAgB,gCAChBC,QAAW,OAEbC,IAAO,CACL,aAAc,CACZ,WAGJC,aAAgB,CACd,eAAgB,SAChB,SAAU,SACV,UAAW,CACTL,QAAW,SACXM,SAAY,CACV,YACA,YAGJC,KAAQ,CACNP,QAAW,UAEb,YAAa,WCxBjBQ,QAAQC,IAAIZ,EAAAa,eAEMC,SAASC,cAAc,eAAzC,MACMC,EAAaF,SAASC,cAAc,gBAEpCE,GADcH,SAASC,cAAc,iBACpBD,SAASC,cAAc,qBAIxCG,EAAc,CAAIC,EAAiBC,IAChC,IAAIC,SAAO,CAAEC,EAASC,KAC3B,GAAIN,EAAeO,SAASV,SAASC,cAAa,SAAUK,MAAW,CACrE,MAAMK,EAAMX,SAASC,cAAa,SAAUK,KAC5CK,EAAIC,GAAE,SAAYN,IAClBK,EAAIE,IAAMR,EACVM,EAAIG,OAAM,IAASN,EAAQG,GAC3BA,EAAII,QAAUN,MACT,CACL,IAAIE,EAAMX,SAASgB,cAAc,OACjCL,EAAIC,GAAE,SAAYN,IAClBK,EAAIE,IAAMR,EACVM,EAAMR,EAAec,YAAYN,GACjCA,EAAIG,OAAM,IAASN,EAAQG,GAC3BA,EAAII,QAAUN,MAKdS,EAAa,CAAIC,EAAyBb,KAC9C,MAAMc,EAASpB,SAASC,cAAa,UAAWK,MAAiCN,SAASgB,cAAc,UACxGd,EAAWe,YAAYG,GACvBA,EAAOR,GAAE,UAAaN,IACtB,MAAMe,EAAMD,EAAOE,WAAW,MAI9B,OAHAF,EAAOG,MAAQJ,EAAMK,aACrBJ,EAAOK,OAASN,EAAMO,cACtBL,EAAIM,UAAUR,EAAO,EAAG,GACjBC,GAKHQ,EAAqBR,GAAyCA,EAAOE,WAAW,MAAMO,aAAa,EAAG,EAAGT,EAAOG,MAAOH,EAAOK,QAG9HK,EAAY,IAAIC,IAEtBC,iBAAiB,UAAQC,MAASC,IAChC,MAAMC,EAxCiB,CAAID,GAA6BA,EAAME,OAA4BD,MAwC5EE,CAAoBH,GAClC,GAAIC,EAAMG,OAAS,EAAG,CAEpB,IAAK,IAAIC,KAAOT,EAAUU,SACxBC,IAAIC,gBAAgBH,GACpBT,EAAUa,OAAOJ,GAInB,MAAMK,EAAOC,MAAMC,KAAKX,GAAOY,IAAIN,IAAIO,iBACvCJ,EAAKK,SAAQC,GAAKpB,EAAUqB,IAAID,KAGhC,MAGMtD,SAHeW,QAAQ6C,IAAIR,EAAKG,IAAI3C,KAClB2C,IAAI7B,GACA6B,IAAInB,GACRmB,IAAI7D,EAAAa,eAC5BF,QAAQC,IAAIF","sources":["src/pix2gltfr/Cargo.toml","src/app.ts"],"sourcesContent":["[package]\nname = \"pix2gltfr\"\nversion = \"0.1.0\"\nedition = \"2018\"\ndescriptions = \"Convert png to gltf voxel art\"\nlicense = \"MIT\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[lib]\ncrate-type = [\"cdylib\"]\n\n[dependencies]\nwasm-bindgen = \"0.2.74\"\njs-sys = \"0.3.55\"\nweb-sys = {version = \"0.3.55\", features = [\"ImageData\", \"console\"]}\ngltf = {version = \"0.16.0\"}\ngltf-json = \"0.16.0\"","import { image_to_gltf } from \"./pix2gltfr/Cargo.toml\";\n\nconsole.log(image_to_gltf);\n\nconst fileInput = document.querySelector(\"#file-input\") as HTMLInputElement;\nconst inCanvases = document.querySelector(\"#in-canvases\") as HTMLElement;\nconst outCanvases = document.querySelector(\"#out-canvases\") as HTMLElement;\nconst imageContainer = document.querySelector(\"#image-container\") as HTMLElement;\n\nconst fileEventToFileList = (event: Event): FileList => ((event.target as HTMLInputElement).files)\n\nconst dataUrlToImage = (dataUrl: string, index: number): Promise<HTMLImageElement> => {\n  return new Promise((resolve, reject) => {\n    if (imageContainer.contains(document.querySelector(`image-${index}`))) {\n      const img = document.querySelector(`image-${index}`) as HTMLImageElement;\n      img.id = `image-${index}`;\n      img.src = dataUrl;\n      img.onload = () => resolve(img);\n      img.onerror = reject;\n    } else {\n      let img = document.createElement(\"img\");\n      img.id = `image-${index}`;\n      img.src = dataUrl;\n      img = imageContainer.appendChild(img);\n      img.onload = () => resolve(img);\n      img.onerror = reject;\n    }\n  });\n}\n\nconst imageToCanvas = (image: HTMLImageElement, index: number): HTMLCanvasElement => {\n  const canvas = document.querySelector(`canvas-${index}`) as HTMLCanvasElement || document.createElement(\"canvas\");\n  inCanvases.appendChild(canvas);\n  canvas.id = `canvas-${index}`;\n  const ctx = canvas.getContext(\"2d\");\n  canvas.width = image.naturalWidth;\n  canvas.height = image.naturalHeight;\n  ctx.drawImage(image, 0, 0);\n  return canvas;\n}\n\n\n\nconst canvasToImageData = (canvas: HTMLCanvasElement): ImageData => canvas.getContext(\"2d\").getImageData(0, 0, canvas.width, canvas.height);\n\n\nconst objURLset = new Set<string>();\n\naddEventListener(\"change\", async (event) => {\n  const files = fileEventToFileList(event);\n  if (files.length > 0) {\n    // cleanup old image objects\n    for (let url of objURLset.values()) {\n      URL.revokeObjectURL(url);\n      objURLset.delete(url);\n    }\n\n    // create image objects\n    const urls = Array.from(files).map(URL.createObjectURL);\n    urls.forEach(u => objURLset.add(u));\n\n    // await image dom load\n    const images = await Promise.all(urls.map(dataUrlToImage));\n    const canvases = images.map(imageToCanvas);\n    const imageDatas = canvases.map(canvasToImageData);\n    const gltf = imageDatas.map(image_to_gltf);\n    console.log(gltf);\n  }\n})\n"],"names":["$6258a9b4f0b33150$exports","package","name","version","edition","descriptions","license","lib","dependencies","features","gltf","console","log","image_to_gltf","document","querySelector","$ff8c034c88650e53$var$inCanvases","$ff8c034c88650e53$var$imageContainer","$ff8c034c88650e53$var$dataUrlToImage","dataUrl","index","Promise","resolve","reject","contains","img","id","src","onload","onerror","createElement","appendChild","$ff8c034c88650e53$var$imageToCanvas","image","canvas","ctx","getContext","width","naturalWidth","height","naturalHeight","drawImage","$ff8c034c88650e53$var$canvasToImageData","getImageData","$ff8c034c88650e53$var$objURLset","Set","addEventListener","async","event","files","target","$ff8c034c88650e53$var$fileEventToFileList","length","url","values","URL","revokeObjectURL","delete","urls","Array","from","map","createObjectURL","forEach","u","add","all"],"version":3,"file":"index.6696f6a3.js.map"}